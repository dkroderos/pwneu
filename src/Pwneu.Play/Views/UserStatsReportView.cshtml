@model Pwneu.Play.Views.UserStatsReport

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Varela+Round&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/charts.css/dist/charts.min.css">

<style>
    body {
        font-family: 'Varela Round', sans-serif;
    }
    h2 {
        text-align: center;
    }
</style>

<h2>User Stats Report By PWNEU</h2>
<p style="text-align: center">@Model.IssuedAt.ToString("MMMM dd, yyyy hh:mm tt") UTC</p>

<!-- User Info and Score Graph Container -->
<div style="display: flex; justify-content: space-between; margin: 0 auto; padding: 20px; width: 100%; max-width: 1200px;">
    <!-- User Info -->
    <div style="flex: 1; margin-right: 20px;">
        <h2>User Info</h2>
        <p>
            <strong>User ID:</strong> @Model.Id
        </p>
        <p>
            <strong>Username:</strong> @Model.UserName
        </p>
        <p>
            <strong>Full Name:</strong> @Model.FullName
        </p>
        <p>
            <strong>Position:</strong> @(Model.Position.HasValue ? Model.Position.Value.ToString() : "N/A")
        </p>
        <p>
            <strong>Points:</strong> @(Model.Points.HasValue ? Model.Points.Value.ToString() : "N/A")
        </p>
    </div>

    @{
        var minScore = Model.UserGraph.Any() ? Model.UserGraph.Min(ug => ug.Score) : 0;
        var maxScore = Model.UserGraph.Any() ? Model.UserGraph.Max(ug => ug.Score) : 0;

        double NormalizeScore(int score) => (double)(score - minScore) / (maxScore - minScore);
    }

    <!-- Score Graph -->
    <div style="flex: 1;">
        <h2>Score Graph</h2>

        @if (Model.UserGraph.Any())
        {
            <div style="display: flex; flex-direction: row; gap: 40px; width: 100%; max-width: 600px; margin: 0 auto;">
                <table class="charts-css line hide-data show-primary-axis show-labels show-4-secondary-axes">
                    <thead>
                    <tr>
                        <th scope="col">Date</th>
                        <th scope="col">Score</th>
                    </tr>
                    </thead>
                    <tbody>
                    @for (var i = 0; i < Model.UserGraph.Count - 1; i++)
                    {
                        var currentScore = Model.UserGraph[i].Score;
                        var nextScore = Model.UserGraph[i + 1].Score;

                        var start = NormalizeScore(currentScore);
                        var end = NormalizeScore(nextScore);

                        <tr>
                            <td style="--start: @start; --end: @end;"></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p style="text-align: center">No data available for the score graph.</p>
        }
    </div>
</div>

<!-- Category Evaluations -->
<div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px; margin: 0 auto; padding: 20px;">
    @foreach (var category in Model.CategoryEvaluations)
    {
        var totalChallenges = category.TotalChallenges;
        var totalSolves = category.TotalSolves;
        var unsolvedChallenges = totalChallenges - totalSolves;
        var solvePercentage = (double)totalSolves / totalChallenges;
        var unsolvedPercentage = (double)unsolvedChallenges / totalChallenges;

        <div style="border: 1px solid #ccc; padding: 10px; border-radius: 5px; background-color: #f9f9f9;">
            <h2>@category.Name Category</h2>

            <!-- Pie Chart for Solved/Unsolved -->
            <div style="display: flex; flex-direction: row; gap: 40px; width: 100%; max-width: 600px; margin: 0 auto;">
                <table class="charts-css pie show-primary-axis show-6-secondary-axes hide-data datasets-spacing-1">
                    <tbody>
                    <tr>
                        <td style="--start: 0.0; --end: @solvePercentage;"></td>
                    </tr>
                    <tr>
                        <td style="--start: @solvePercentage; --end: @(solvePercentage + unsolvedPercentage);"></td>
                    </tr>
                    </tbody>
                </table>

                <br/>

                <ul class="charts-css legend legend-square">
                    <li>Solved (@totalSolves)</li>
                    <li>Unsolved (@unsolvedChallenges)</li>
                </ul>
            </div>

            <br/>
            <br/>
            <br/>

            <!-- Bar Chart for Total Solves, Incorrect Attempts, and Hints Used -->
            <div style="display: flex; flex-direction: row; gap: 40px; width: 100%; max-width: 600px; margin: 0 auto;">
                <table class="charts-css bar data-spacing-10 show-primary-axis show-6-secondary-axes datasets-spacing-1">
                    <thead>
                    <tr>
                        <th scope="col">Metric</th>
                        <th scope="col">Value</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <th scope="row">Correct</th>
                        <td style="--size: @(category.TotalSolves / (double)category.TotalChallenges); border-radius: 5px;"></td>
                    </tr>
                    <tr>
                        <th scope="row">Incorrect</th>
                        <td style="--size: @(category.IncorrectAttempts / (double)category.TotalChallenges); border-radius: 5px;"></td>
                    </tr>
                    <tr>
                        <th scope="row">Hints</th>
                        <td style="--size: @(category.HintsUsed / (double)category.TotalChallenges); border-radius: 5px;"></td>
                    </tr>
                    </tbody>
                </table>

                <br/>

                <ul class="charts-css legend legend-square">
                    <li>Correct Attempts: (@category.TotalSolves)</li>
                    <li>Incorrect Attempts: (@category.IncorrectAttempts)</li>
                    <li>Hints Used: (@category.HintsUsed)</li>
                </ul>
            </div>
        </div>
    }
</div>